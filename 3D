<!DOCTYPE html>
<html>
<head>
    <title>3D Модель Viewer</title>
    <style>
        body { margin: 0; }
        canvas { display: block; }
    </style>
</head>
<body>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>
    <script src="https://threejs.org/examples/js/controls/OrbitControls.js"></script>
    <script src="https://threejs.org/examples/js/loaders/FBXLoader.js"></script>
    <script>
        let camera, scene, renderer, controls;

        init();
        animate();

        function init() {
            // Создание сцены
            scene = new THREE.Scene();
            scene.background = new THREE.Color(0xa0a0a0);

            // Добавление камеры
            camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 2000);
            camera.position.set(100, 200, 300);

            // Добавление освещения
            const hemiLight = new THREE.HemisphereLight(0xffffff, 0x444444);
            hemiLight.position.set(0, 200, 0);
            scene.add(hemiLight);

            const dirLight = new THREE.DirectionalLight(0xffffff);
            dirLight.position.set(0, 200, 100);
            dirLight.castShadow = true;
            scene.add(dirLight);

            // Добавление рендерера
            renderer = new THREE.WebGLRenderer();
            renderer.setSize(window.innerWidth, window.innerHeight);
            document.body.appendChild(renderer.domElement);

            // Добавление контролов
            controls = new THREE.OrbitControls(camera, renderer.domElement);
            controls.addEventListener('change', render); // использовать, если нет функции анимации

            // Загрузка модели
            const loader = new THREE.FBXLoader();
            loader.load('ВАША_ПРЯМАЯ_ССЫЛКА_НА_МОДЕЛЬ', function (model) {
                model.traverse(function (child) {
                    if (child.isMesh) {
                        child.castShadow = true;
                        child.receiveShadow = true;
                    }
                });
                scene.add(model);
                render();
            });

            window.addEventListener('resize', onWindowResize);
        }

        function onWindowResize() {
            camera.aspect = window.innerWidth / window.innerHeight;
            camera.updateProjectionMatrix();
            renderer.setSize(window.innerWidth, window.innerHeight);
            render();
        }

        function animate() {
            requestAnimationFrame(animate);
            controls.update(); // только если используется OrbitControls
            render();
        }

        function render() {
            renderer.render(scene, camera);
        }
    </script>
</body>
</html>
